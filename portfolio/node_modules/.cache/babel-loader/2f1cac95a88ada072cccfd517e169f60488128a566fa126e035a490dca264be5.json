{"ast":null,"code":"var _s = $RefreshSig$();\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { getOverlayDirection } from './helpers';\nimport getInitialPopperStyles from './getInitialPopperStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Tooltip = /*#__PURE__*/_s( /*#__PURE__*/React.forwardRef(_c = _s((_ref, ref) => {\n  _s();\n  let {\n    bsPrefix,\n    placement = 'right',\n    className,\n    style,\n    children,\n    arrowProps,\n    hasDoneInitialMeasure,\n    popper,\n    show,\n    ...props\n  } = _ref;\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'tooltip');\n  const isRTL = useIsRTL();\n  const [primaryPlacement] = (placement == null ? void 0 : placement.split('-')) || [];\n  const bsDirection = getOverlayDirection(primaryPlacement, isRTL);\n  let computedStyle = style;\n  if (show && !hasDoneInitialMeasure) {\n    computedStyle = {\n      ...style,\n      ...getInitialPopperStyles(popper == null ? void 0 : popper.strategy)\n    };\n  }\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    style: computedStyle,\n    role: \"tooltip\",\n    \"x-placement\": primaryPlacement,\n    className: classNames(className, bsPrefix, `bs-tooltip-${bsDirection}`),\n    ...props,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"tooltip-arrow\",\n      ...arrowProps\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: `${bsPrefix}-inner`,\n      children: children\n    })]\n  });\n}, \"qt8zUop0NGlZqKDfplCog9PN+O4=\", false, function () {\n  return [useBootstrapPrefix, useIsRTL];\n})), \"qt8zUop0NGlZqKDfplCog9PN+O4=\", false, function () {\n  return [useBootstrapPrefix, useIsRTL];\n});\n_c2 = Tooltip;\nTooltip.displayName = 'Tooltip';\nexport default Tooltip;\nvar _c, _c2;\n$RefreshReg$(_c, \"Tooltip$React.forwardRef\");\n$RefreshReg$(_c2, \"Tooltip\");","map":{"version":3,"names":["classNames","React","useBootstrapPrefix","useIsRTL","getOverlayDirection","getInitialPopperStyles","jsx","_jsx","jsxs","_jsxs","Tooltip","_s","forwardRef","_c","_ref","ref","bsPrefix","placement","className","style","children","arrowProps","hasDoneInitialMeasure","popper","show","props","isRTL","primaryPlacement","split","bsDirection","computedStyle","strategy","role","_c2","displayName","$RefreshReg$"],"sources":["/Users/tessanyquist/Documents/GitHub/Project_Website.github.io/portfolio/src/react-bootstrap/esm/Tooltip.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { getOverlayDirection } from './helpers';\nimport getInitialPopperStyles from './getInitialPopperStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Tooltip = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  placement = 'right',\n  className,\n  style,\n  children,\n  arrowProps,\n  hasDoneInitialMeasure,\n  popper,\n  show,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'tooltip');\n  const isRTL = useIsRTL();\n  const [primaryPlacement] = (placement == null ? void 0 : placement.split('-')) || [];\n  const bsDirection = getOverlayDirection(primaryPlacement, isRTL);\n  let computedStyle = style;\n  if (show && !hasDoneInitialMeasure) {\n    computedStyle = {\n      ...style,\n      ...getInitialPopperStyles(popper == null ? void 0 : popper.strategy)\n    };\n  }\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    style: computedStyle,\n    role: \"tooltip\",\n    \"x-placement\": primaryPlacement,\n    className: classNames(className, bsPrefix, `bs-tooltip-${bsDirection}`),\n    ...props,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"tooltip-arrow\",\n      ...arrowProps\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: `${bsPrefix}-inner`,\n      children: children\n    })]\n  });\n});\nTooltip.displayName = 'Tooltip';\nexport default Tooltip;"],"mappings":";AAAA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,kBAAkB,EAAEC,QAAQ,QAAQ,iBAAiB;AAC9D,SAASC,mBAAmB,QAAQ,WAAW;AAC/C,OAAOC,sBAAsB,MAAM,0BAA0B;AAC7D,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,IAAI,IAAIC,KAAK,QAAQ,mBAAmB;AACjD,MAAMC,OAAO,GAAG,aAAAC,EAAA,eAAaV,KAAK,CAACW,UAAU,CAAAC,EAAA,GAAAF,EAAA,CAAC,CAAAG,IAAA,EAW3CC,GAAG,KAAK;EAAAJ,EAAA;EAAA,IAXoC;IAC7CK,QAAQ;IACRC,SAAS,GAAG,OAAO;IACnBC,SAAS;IACTC,KAAK;IACLC,QAAQ;IACRC,UAAU;IACVC,qBAAqB;IACrBC,MAAM;IACNC,IAAI;IACJ,GAAGC;EACL,CAAC,GAAAX,IAAA;EACCE,QAAQ,GAAGd,kBAAkB,CAACc,QAAQ,EAAE,SAAS,CAAC;EAClD,MAAMU,KAAK,GAAGvB,QAAQ,CAAC,CAAC;EACxB,MAAM,CAACwB,gBAAgB,CAAC,GAAG,CAACV,SAAS,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,SAAS,CAACW,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE;EACpF,MAAMC,WAAW,GAAGzB,mBAAmB,CAACuB,gBAAgB,EAAED,KAAK,CAAC;EAChE,IAAII,aAAa,GAAGX,KAAK;EACzB,IAAIK,IAAI,IAAI,CAACF,qBAAqB,EAAE;IAClCQ,aAAa,GAAG;MACd,GAAGX,KAAK;MACR,GAAGd,sBAAsB,CAACkB,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACQ,QAAQ;IACrE,CAAC;EACH;EACA,OAAO,aAAatB,KAAK,CAAC,KAAK,EAAE;IAC/BM,GAAG,EAAEA,GAAG;IACRI,KAAK,EAAEW,aAAa;IACpBE,IAAI,EAAE,SAAS;IACf,aAAa,EAAEL,gBAAgB;IAC/BT,SAAS,EAAElB,UAAU,CAACkB,SAAS,EAAEF,QAAQ,EAAG,cAAaa,WAAY,EAAC,CAAC;IACvE,GAAGJ,KAAK;IACRL,QAAQ,EAAE,CAAC,aAAab,IAAI,CAAC,KAAK,EAAE;MAClCW,SAAS,EAAE,eAAe;MAC1B,GAAGG;IACL,CAAC,CAAC,EAAE,aAAad,IAAI,CAAC,KAAK,EAAE;MAC3BW,SAAS,EAAG,GAAEF,QAAS,QAAO;MAC9BI,QAAQ,EAAEA;IACZ,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;EAAA,QA1BYlB,kBAAkB,EACfC,QAAQ;AAAA,EAyBvB,CAAC;EAAA,QA1BWD,kBAAkB,EACfC,QAAQ;AAAA,EAyBtB;AAAC8B,GAAA,GAtCGvB,OAAO;AAuCbA,OAAO,CAACwB,WAAW,GAAG,SAAS;AAC/B,eAAexB,OAAO;AAAC,IAAAG,EAAA,EAAAoB,GAAA;AAAAE,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAAF,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}