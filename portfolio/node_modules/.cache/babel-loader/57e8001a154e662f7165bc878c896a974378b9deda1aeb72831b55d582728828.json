{"ast":null,"code":"var _s = $RefreshSig$();\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport DropdownContext from '@restart/ui/DropdownContext';\nimport { useDropdownToggle } from '@restart/ui/DropdownToggle';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownToggle = /*#__PURE__*/_s( /*#__PURE__*/React.forwardRef(_c = _s((_ref, ref) => {\n  _s();\n  let {\n    bsPrefix,\n    split,\n    className,\n    childBsPrefix,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = Button,\n    ...props\n  } = _ref;\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n  const dropdownContext = useContext(DropdownContext);\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n  const [toggleProps] = useDropdownToggle();\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle'));\n\n  // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n  return /*#__PURE__*/_jsx(Component, {\n    className: classNames(className, prefix, split && `${prefix}-split`, (dropdownContext == null ? void 0 : dropdownContext.show) && 'show'),\n    ...toggleProps,\n    ...props\n  });\n}, \"wD0fqP020umDkzw9m5udFL8FGro=\", false, function () {\n  return [useBootstrapPrefix, useDropdownToggle, useMergedRefs, useWrappedRefWithWarning];\n})), \"wD0fqP020umDkzw9m5udFL8FGro=\", false, function () {\n  return [useBootstrapPrefix, useDropdownToggle, useMergedRefs, useWrappedRefWithWarning];\n});\n_c2 = DropdownToggle;\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;\nvar _c, _c2;\n$RefreshReg$(_c, \"DropdownToggle$React.forwardRef\");\n$RefreshReg$(_c2, \"DropdownToggle\");","map":{"version":3,"names":["useMergedRefs","DropdownContext","useDropdownToggle","classNames","React","useContext","Button","useBootstrapPrefix","useWrappedRefWithWarning","jsx","_jsx","DropdownToggle","_s","forwardRef","_c","_ref","ref","bsPrefix","split","className","childBsPrefix","as","Component","props","prefix","dropdownContext","undefined","toggleProps","show","_c2","displayName","$RefreshReg$"],"sources":["/Users/tessanyquist/Documents/GitHub/Project_Website.github.io/portfolio/src/react-bootstrap/esm/DropdownToggle.js"],"sourcesContent":["import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport DropdownContext from '@restart/ui/DropdownContext';\nimport { useDropdownToggle } from '@restart/ui/DropdownToggle';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownToggle = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  split,\n  className,\n  childBsPrefix,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = Button,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n  const dropdownContext = useContext(DropdownContext);\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n  const [toggleProps] = useDropdownToggle();\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle'));\n\n  // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n  return /*#__PURE__*/_jsx(Component, {\n    className: classNames(className, prefix, split && `${prefix}-split`, (dropdownContext == null ? void 0 : dropdownContext.show) && 'show'),\n    ...toggleProps,\n    ...props\n  });\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;"],"mappings":";AAAA,OAAOA,aAAa,MAAM,8BAA8B;AACxD,OAAOC,eAAe,MAAM,6BAA6B;AACzD,SAASC,iBAAiB,QAAQ,4BAA4B;AAC9D,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,kBAAkB,QAAQ,iBAAiB;AACpD,OAAOC,wBAAwB,MAAM,4BAA4B;AACjE,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,MAAMC,cAAc,GAAG,aAAAC,EAAA,eAAaR,KAAK,CAACS,UAAU,CAAAC,EAAA,GAAAF,EAAA,CAAC,CAAAG,IAAA,EAQlDC,GAAG,KAAK;EAAAJ,EAAA;EAAA,IAR2C;IACpDK,QAAQ;IACRC,KAAK;IACLC,SAAS;IACTC,aAAa;IACb;IACAC,EAAE,EAAEC,SAAS,GAAGhB,MAAM;IACtB,GAAGiB;EACL,CAAC,GAAAR,IAAA;EACC,MAAMS,MAAM,GAAGjB,kBAAkB,CAACU,QAAQ,EAAE,iBAAiB,CAAC;EAC9D,MAAMQ,eAAe,GAAGpB,UAAU,CAACJ,eAAe,CAAC;EACnD,IAAImB,aAAa,KAAKM,SAAS,EAAE;IAC/BH,KAAK,CAACN,QAAQ,GAAGG,aAAa;EAChC;EACA,MAAM,CAACO,WAAW,CAAC,GAAGzB,iBAAiB,CAAC,CAAC;EACzCyB,WAAW,CAACX,GAAG,GAAGhB,aAAa,CAAC2B,WAAW,CAACX,GAAG,EAAER,wBAAwB,CAACQ,GAAG,EAAE,gBAAgB,CAAC,CAAC;;EAEjG;EACA;EACA,OAAO,aAAaN,IAAI,CAACY,SAAS,EAAE;IAClCH,SAAS,EAAEhB,UAAU,CAACgB,SAAS,EAAEK,MAAM,EAAEN,KAAK,IAAK,GAAEM,MAAO,QAAO,EAAE,CAACC,eAAe,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,eAAe,CAACG,IAAI,KAAK,MAAM,CAAC;IACzI,GAAGD,WAAW;IACd,GAAGJ;EACL,CAAC,CAAC;AACJ,CAAC;EAAA,QAfgBhB,kBAAkB,EAKXL,iBAAiB,EACrBF,aAAa,EAAkBQ,wBAAwB;AAAA,EAS1E,CAAC;EAAA,QAfeD,kBAAkB,EAKXL,iBAAiB,EACrBF,aAAa,EAAkBQ,wBAAwB;AAAA,EASzE;AAACqB,GAAA,GAxBGlB,cAAc;AAyBpBA,cAAc,CAACmB,WAAW,GAAG,gBAAgB;AAC7C,eAAenB,cAAc;AAAC,IAAAG,EAAA,EAAAe,GAAA;AAAAE,YAAA,CAAAjB,EAAA;AAAAiB,YAAA,CAAAF,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}